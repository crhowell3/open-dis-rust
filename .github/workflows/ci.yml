name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
  workflow_dispatch:
  schedule: [cron: "20 17 * * 5"]

permissions:
  contents: read

env:
  RUSTFLAGS: -Dwarnings

jobs:
  test:
    name: Tests
    runs-on: self-hosted
    timeout-minutes: 45
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@nightly
      - run: cargo test
  
  stable:
    name: Rust ${{matrix.rust}}
    runs-on: self-hosted
    strategy:
      fail-fast: false
      matrix:
        rust: [stable, beta]
    timeout-minutes: 45
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{matrix.rust}}
      - run: cargo build --no-default-features

  nightly:
    name: Rust nightly
    runs-on: self-hosted
    strategy:
      fail-fast: false
    timeout-minutes: 45
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@nightly
      - run: cargo build
      - run: cargo build --no-default-features
  
  doc:
    name: Documentation
    runs-on: self-hosted
    timeout-minutes: 45
    env:
      RUSTDOCFLAGS: -Dwarnings
    steps:
      - run: cargo test --doc --release --workspace
      
  clippy:
    name: Clippy
    runs-on: self-hosted
    permissions: write-all
    if: github.event_name != 'pull_request'
    timeout-minutes: 45
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@clippy
      - run: cargo install clippy-sarif sarif-fmt
      - run: cargo clippy 
          --all-features 
          --message-format=json
          -- -Dclippy::all -Dclippy::pedantic | clippy-sarif | tee rust-clippy-results.sarif | sarif-fmt
        continue-on-error: true
      - uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: rust-clippy-results.sarif
          wait-for-processing: true

  miri:
    name: Miri
    runs-on: self-hosted
    timeout-minutes: 45
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@miri
      - run: rustup override set nightly
      - run: cargo miri setup
      - run: cargo miri test
        env:
          MIRIFLAGS: "-Zmiri-strict-provenance -Zmiri-disable-isolation"
